{"ast":null,"code":"var _jsxFileName = \"/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx\";\nimport './Settings.css';\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet log;\nexport default function Settings() {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    document.getElementById(\"userSelect\").addEventListener(\"change\", function () {\n      let selectedUser = this.value; // Получаем выбранного пользователя\n      //localStorage.setItem('login', selectedUser);\n      const myJson = {\n        username: selectedUser\n      };\n      // Отправляем выбранного пользователя на сервер для авторизации\n      fetch(\"http://localhost:81/login.php\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(myJson) // Отправляем только имя пользователя\n      }).then(response => {\n        if (response.ok) {\n          return response.text();\n        } else {\n          throw new Error(\"Ошибка сети\");\n        }\n      }).then(data => {\n        console.log(data);\n        log = myJson.username;\n      }).catch(error => {\n        // Ошибка сервера\n        alert(\"Ошибка: \" + error.message);\n      });\n    });\n  });\n  window.addEventListener(\"load\", function () {\n    let selectedUser = localStorage.getItem(\"login\");\n    if (selectedUser) {\n      document.getElementById(\"userSelect\").value = selectedUser;\n    }\n  });\n  function saveLog() {\n    localStorage.clear();\n    localStorage.setItem('login', log);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Text\",\n        children: \"Choose user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"userSelect\",\n        className: \"UserSelector\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveLog,\n        children: \"SAVE LOG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c = Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["TagPicker","jsxDEV","_jsxDEV","log","Settings","document","addEventListener","getElementById","selectedUser","value","myJson","username","fetch","method","headers","body","JSON","stringify","then","response","ok","text","Error","data","console","catch","error","alert","message","window","localStorage","getItem","saveLog","clear","setItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","class","onClick","_c","$RefreshReg$"],"sources":["/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx"],"sourcesContent":["import './Settings.css'\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nlet log;\n\nexport default function Settings () {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        document.getElementById(\"userSelect\").addEventListener(\"change\", function() {\n            let selectedUser = this.value; // Получаем выбранного пользователя\n            //localStorage.setItem('login', selectedUser);\n            const myJson = {\n                username: selectedUser\n            };\n            // Отправляем выбранного пользователя на сервер для авторизации\n            fetch(\"http://localhost:81/login.php\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(myJson) // Отправляем только имя пользователя\n            })\n                .then(response => {\n                    if (response.ok) {\n                        return response.text();\n                    } else {\n                        throw new Error(\"Ошибка сети\");\n                    }\n                })\n                .then(data => {\n                    console.log(data);\n                    log=myJson.username;\n                })\n                .catch(error => {\n                    // Ошибка сервера\n                    alert(\"Ошибка: \" + error.message);\n                });\n        });\n    });\n\n    window.addEventListener(\"load\", function() {\n        let selectedUser = localStorage.getItem(\"login\");\n        if (selectedUser) {\n            document.getElementById(\"userSelect\").value = selectedUser;\n        }\n    });\n    function saveLog(){\n        localStorage.clear();\n        localStorage.setItem('login', log);\n    }\n\n    return (\n        <main>\n            <div className='Settings'>\n                <h1 className='Text'>Choose user</h1>\n                <select id=\"userSelect\" className=\"UserSelector\">\n                    <option class=\"NameText\">user1</option>\n                    <option class=\"NameText\">user2</option>\n                </select>\n                <button onClick={saveLog}>SAVE LOG</button>\n            </div>\n        </main>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}