{"ast":null,"code":"var _jsxFileName = \"/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx\",\n  _s = $RefreshSig$();\nimport './Settings.css';\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Settings() {\n  _s();\n  const [redirectTo, setRedirectTo] = useState(\"/\");\n  useEffect(() => {\n    document.getElementById(\"userSelect\").addEventListener(\"change\", function () {\n      let selectedUser = this.value; // Получаем выбранного пользователя\n      const myJson = {\n        username: selectedUser\n      };\n      const fetchData = async () => {\n        try {\n          const response = await fetch(\"http://localhost:81/login.php\", {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(myJson) // Отправляем только имя пользователя\n          });\n          const jsonData = await response.text();\n          setRedirectTo(jsonData);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n      fetchData();\n    });\n    console.log(redirectTo);\n  }, []);\n\n  // document.addEventListener(\"DOMContentLoaded\", function() {\n  //     document.getElementById(\"userSelect\").addEventListener(\"change\", function() {\n  //         let selectedUser = this.value; // Получаем выбранного пользователя\n  //         const myJson = {\n  //             username: selectedUser\n  //         };\n  //         // Отправляем выбранного пользователя на сервер для авторизации\n  //         fetch(\"http://localhost:81/login.php\", {\n  //             method: \"POST\",\n  //             headers: {\n  //                 'Content-Type': 'application/json'\n  //             },\n  //             body: JSON.stringify(myJson) // Отправляем только имя пользователя\n  //         })\n  //             .then(response => {\n  //                 if (response.ok) {\n  //                     return response.text();\n  //                 } else {\n  //                     throw new Error(\"Ошибка сети\");\n  //                 }\n  //             })\n  //             .then(data => {\n  //                 console.log(data);\n  //             })\n  //             .catch(error => {\n  //                 // Ошибка сервера\n  //                 alert(\"Ошибка: \" + error.message);\n  //             });\n  //     });\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Text\",\n        children: \"Choose user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"userSelect\",\n        className: \"UserSelector\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Settings, \"B3E9SYV/7yL9AboyYurgfpbdmqQ=\");\n_c = Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["TagPicker","useEffect","useState","jsxDEV","_jsxDEV","Settings","_s","redirectTo","setRedirectTo","document","getElementById","addEventListener","selectedUser","value","myJson","username","fetchData","response","fetch","method","headers","body","JSON","stringify","jsonData","text","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","class","_c","$RefreshReg$"],"sources":["/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx"],"sourcesContent":["import './Settings.css'\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport {useEffect, useState} from \"react\";\n\nexport default function Settings () {\n    const [redirectTo, setRedirectTo] = useState(\"/\");\n\n    useEffect(() => {\n        document.getElementById(\"userSelect\").addEventListener(\"change\", function() {\n            let selectedUser = this.value; // Получаем выбранного пользователя\n            const myJson = {\n                username: selectedUser\n            };\n            const fetchData = async () => {\n                try {\n                    const response = await fetch(\"http://localhost:81/login.php\", {\n                        method: \"POST\",\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(myJson) // Отправляем только имя пользователя\n                    });\n                    const jsonData = await response.text();\n                    setRedirectTo(jsonData);\n                } catch (error) {\n                    console.error('Error fetching data:', error);\n                }\n            };\n            fetchData();\n        });\n        console.log(redirectTo);\n    }, []);\n\n    // document.addEventListener(\"DOMContentLoaded\", function() {\n    //     document.getElementById(\"userSelect\").addEventListener(\"change\", function() {\n    //         let selectedUser = this.value; // Получаем выбранного пользователя\n    //         const myJson = {\n    //             username: selectedUser\n    //         };\n    //         // Отправляем выбранного пользователя на сервер для авторизации\n    //         fetch(\"http://localhost:81/login.php\", {\n    //             method: \"POST\",\n    //             headers: {\n    //                 'Content-Type': 'application/json'\n    //             },\n    //             body: JSON.stringify(myJson) // Отправляем только имя пользователя\n    //         })\n    //             .then(response => {\n    //                 if (response.ok) {\n    //                     return response.text();\n    //                 } else {\n    //                     throw new Error(\"Ошибка сети\");\n    //                 }\n    //             })\n    //             .then(data => {\n    //                 console.log(data);\n    //             })\n    //             .catch(error => {\n    //                 // Ошибка сервера\n    //                 alert(\"Ошибка: \" + error.message);\n    //             });\n    //     });\n    // });\n\n    return (\n        <main>\n            <div className='Settings'>\n                <h1 className='Text'>Choose user</h1>\n                <select id=\"userSelect\" className=\"UserSelector\">\n                    <option class=\"NameText\">user1</option>\n                    <option class=\"NameText\">user2</option>\n                </select>\n            </div>\n        </main>\n    )\n}"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,SAAS,MAAM,kBAAkB;AACxC,OAAO,mCAAmC;AAC1C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,QAAQA,CAAA,EAAI;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAW;MACxE,IAAIC,YAAY,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;MAC/B,MAAMC,MAAM,GAAG;QACXC,QAAQ,EAAEH;MACd,CAAC;MACD,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC1B,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;YAC1DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,MAAM,CAAC,CAAC;UACjC,CAAC,CAAC;UACF,MAAMU,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;UACtCjB,aAAa,CAACgB,QAAQ,CAAC;QAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAChD;MACJ,CAAC;MACDV,SAAS,CAAC,CAAC;IACf,CAAC,CAAC;IACFW,OAAO,CAACC,GAAG,CAACrB,UAAU,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIH,OAAA;IAAAyB,QAAA,eACIzB,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBzB,OAAA;QAAI0B,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC9B,OAAA;QAAQ+B,EAAE,EAAC,YAAY;QAACL,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC5CzB,OAAA;UAAQgC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvC9B,OAAA;UAAQgC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAAC5B,EAAA,CAvEuBD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}