{"ast":null,"code":"var _jsxFileName = \"/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx\",\n  _s = $RefreshSig$();\nimport './Settings.css';\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Settings() {\n  _s();\n  const [redirectTo, setRedirectTo] = useState(\"/\");\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    document.getElementById(\"userSelect\").addEventListener(\"change\", function () {\n      let selectedUser = this.value; // Получаем выбранного пользователя\n      const myJson = {\n        username: selectedUser\n      };\n      // Отправляем выбранного пользователя на сервер для авторизации\n      fetch(\"http://localhost:81/login.php\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(myJson) // Отправляем только имя пользователя\n      }).then(response => {\n        if (response.ok) {\n          return response.text();\n        } else {\n          throw new Error(\"Ошибка сети\");\n        }\n      }).then(data => {\n        console.log(data);\n      }).catch(error => {\n        // Ошибка сервера\n        alert(\"Ошибка: \" + error.message);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Text\",\n        children: \"Choose user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"userSelect\",\n        className: \"UserSelector\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Settings, \"m3Dxo/DlosRas+k6oeoYOqr0xrY=\");\n_c = Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["TagPicker","useState","jsxDEV","_jsxDEV","Settings","_s","redirectTo","setRedirectTo","document","addEventListener","getElementById","selectedUser","value","myJson","username","fetch","method","headers","body","JSON","stringify","then","response","ok","text","Error","data","console","log","catch","error","alert","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","class","_c","$RefreshReg$"],"sources":["/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx"],"sourcesContent":["import './Settings.css'\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport {useState} from \"react\";\n\nexport default function Settings () {\n    const [redirectTo, setRedirectTo] = useState(\"/\");\n\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        document.getElementById(\"userSelect\").addEventListener(\"change\", function() {\n            let selectedUser = this.value; // Получаем выбранного пользователя\n            const myJson = {\n                username: selectedUser\n            };\n            // Отправляем выбранного пользователя на сервер для авторизации\n            fetch(\"http://localhost:81/login.php\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(myJson) // Отправляем только имя пользователя\n            })\n                .then(response => {\n                    if (response.ok) {\n                        return response.text();\n                    } else {\n                        throw new Error(\"Ошибка сети\");\n                    }\n                })\n                .then(data => {\n                    console.log(data);\n                })\n                .catch(error => {\n                    // Ошибка сервера\n                    alert(\"Ошибка: \" + error.message);\n                });\n        });\n    });\n\n    return (\n        <main>\n            <div className='Settings'>\n                <h1 className='Text'>Choose user</h1>\n                <select id=\"userSelect\" className=\"UserSelector\">\n                    <option class=\"NameText\">user1</option>\n                    <option class=\"NameText\">user2</option>\n                </select>\n            </div>\n        </main>\n    )\n}"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,SAAS,MAAM,kBAAkB;AACxC,OAAO,mCAAmC;AAC1C,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,QAAQA,CAAA,EAAI;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC;EAEjDO,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;IACrDD,QAAQ,CAACE,cAAc,CAAC,YAAY,CAAC,CAACD,gBAAgB,CAAC,QAAQ,EAAE,YAAW;MACxE,IAAIE,YAAY,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;MAC/B,MAAMC,MAAM,GAAG;QACXC,QAAQ,EAAEH;MACd,CAAC;MACD;MACAI,KAAK,CAAC,+BAA+B,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC,CAAC;MACjC,CAAC,CAAC,CACGQ,IAAI,CAACC,QAAQ,IAAI;QACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC1B,CAAC,MAAM;UACH,MAAM,IAAIC,KAAK,CAAC,aAAa,CAAC;QAClC;MACJ,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACrB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;QACZ;QACAC,KAAK,CAAC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC;MACrC,CAAC,CAAC;IACV,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACI7B,OAAA;IAAA8B,QAAA,eACI9B,OAAA;MAAK+B,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrB9B,OAAA;QAAI+B,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCnC,OAAA;QAAQoC,EAAE,EAAC,YAAY;QAACL,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC5C9B,OAAA;UAAQqC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCnC,OAAA;UAAQqC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAACjC,EAAA,CA7CuBD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}