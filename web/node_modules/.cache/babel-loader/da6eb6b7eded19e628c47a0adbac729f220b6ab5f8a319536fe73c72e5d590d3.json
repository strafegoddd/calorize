{"ast":null,"code":"var _jsxFileName = \"/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx\",\n  _s = $RefreshSig$();\nimport './Settings.css';\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet log;\nexport default function Settings() {\n  _s();\n  const [redirectTo, setRedirectTo] = useState(\"/\");\n  useEffect(() => {\n    const fetchLog = async () => {\n      try {\n        const response = await fetch('http://localhost:81/users.php');\n        const jsonData = await response.json();\n        setRedirectTo(jsonData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchLog();\n  }, []);\n  function saveLog() {\n    localStorage.clear();\n    let myElem = document.getElementById(\"userSelect\");\n    let selectedUser = myElem.value; // Получаем выбранного пользователя\n    const myJson = {\n      username: selectedUser\n    };\n    // Отправляем выбранного пользователя на сервер для авторизации\n    fetch(\"http://localhost:81/login.php\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(myJson) // Отправляем только имя пользователя\n    }).then(response => {\n      if (response.ok) {\n        return response.text();\n      } else {\n        throw new Error(\"Ошибка сети\");\n      }\n    }).then(data => {\n      console.log(data);\n      log = myJson.username;\n    }).catch(error => {\n      // Ошибка сервера\n      alert(\"Ошибка: \" + error.message);\n    });\n    localStorage.setItem('login', selectedUser);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Text\",\n        children: \"Choose user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"userSelect\",\n        className: \"UserSelector\",\n        children: (() => {\n          const options = [];\n          for (let i = 0; i < redirectTo.length; i++) {\n            let user = redirectTo[i].login;\n            //console.log(user);\n            options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n              children: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 42\n            }, this));\n          }\n          return options;\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveLog,\n        children: \"SAVE LOG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Settings, \"B3E9SYV/7yL9AboyYurgfpbdmqQ=\");\n_c = Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["TagPicker","React","useState","useEffect","Link","jsxDEV","_jsxDEV","log","Settings","_s","redirectTo","setRedirectTo","fetchLog","response","fetch","jsonData","json","error","console","saveLog","localStorage","clear","myElem","document","getElementById","selectedUser","value","myJson","username","method","headers","body","JSON","stringify","then","ok","text","Error","data","catch","alert","message","setItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","options","i","length","user","login","push","onClick","_c","$RefreshReg$"],"sources":["/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx"],"sourcesContent":["import './Settings.css'\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport React, { useState, useEffect } from 'react';\nimport {Link} from \"react-router-dom\";\nlet log;\n\nexport default function Settings () {\n    const [redirectTo, setRedirectTo] = useState(\"/\");\n    useEffect(() => {\n        const fetchLog = async () => {\n            try {\n                const response = await fetch('http://localhost:81/users.php');\n                const jsonData = await response.json();\n                setRedirectTo(jsonData);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        fetchLog();\n    }, []);\n\n    function saveLog(){\n        localStorage.clear();\n        let myElem = document.getElementById(\"userSelect\")\n        let selectedUser = myElem.value; // Получаем выбранного пользователя\n        const myJson = {\n            username: selectedUser\n        };\n        // Отправляем выбранного пользователя на сервер для авторизации\n        fetch(\"http://localhost:81/login.php\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(myJson) // Отправляем только имя пользователя\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response.text();\n                } else {\n                    throw new Error(\"Ошибка сети\");\n                }\n            })\n            .then(data => {\n                console.log(data);\n                log=myJson.username;\n            })\n            .catch(error => {\n                // Ошибка сервера\n                alert(\"Ошибка: \" + error.message);\n            });\n        localStorage.setItem('login', selectedUser);\n    }\n\n    return (\n        <main>\n            <div className='Settings'>\n                <h1 className='Text'>Choose user</h1>\n                <select id=\"userSelect\" className=\"UserSelector\">\n                    {(() => {\n                        const options = [];\n                        for (let i = 0; i < redirectTo.length; i++) {\n                            let user = redirectTo[i].login;\n                            //console.log(user);\n                            options.push(<option>{user}</option>);\n                        }\n                        return options;\n                    })()}\n                </select>\n                <button onClick={saveLog}>SAVE LOG</button>\n            </div>\n        </main>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}