{"ast":null,"code":"var _jsxFileName = \"/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx\";\nimport './Settings.css';\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet log;\nexport default function Settings() {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    document.getElementById(\"userSelect\").addEventListener(\"change\", function () {});\n  });\n\n  // window.addEventListener(\"load\", function() {\n  //     let selectedUser = localStorage.getItem(\"login\");\n  //     if (selectedUser) {\n  //         document.getElementById(\"userSelect\").value = selectedUser;\n  //     }\n  // });\n  function saveLog() {\n    localStorage.clear();\n    let selectedUser = this.value; // Получаем выбранного пользователя\n    const myJson = {\n      username: selectedUser\n    };\n    // Отправляем выбранного пользователя на сервер для авторизации\n    fetch(\"http://localhost:81/login.php\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(myJson) // Отправляем только имя пользователя\n    }).then(response => {\n      if (response.ok) {\n        return response.text();\n      } else {\n        throw new Error(\"Ошибка сети\");\n      }\n    }).then(data => {\n      console.log(data);\n      log = myJson.username;\n    }).catch(error => {\n      // Ошибка сервера\n      alert(\"Ошибка: \" + error.message);\n    });\n    localStorage.setItem('login', selectedUser);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Text\",\n        children: \"Choose user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"userSelect\",\n        className: \"UserSelector\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          class: \"NameText\",\n          children: \"user2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveLog,\n        children: \"SAVE LOG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c = Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["TagPicker","jsxDEV","_jsxDEV","log","Settings","document","addEventListener","getElementById","saveLog","localStorage","clear","selectedUser","value","myJson","username","fetch","method","headers","body","JSON","stringify","then","response","ok","text","Error","data","console","catch","error","alert","message","setItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","class","onClick","_c","$RefreshReg$"],"sources":["/home/strafegod/codes/tkpris/web/src/components/Settings/Settings.jsx"],"sourcesContent":["import './Settings.css'\nimport TagPicker from 'rsuite/TagPicker';\nimport 'rsuite/TagPicker/styles/index.css';\nlet log;\n\nexport default function Settings () {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        document.getElementById(\"userSelect\").addEventListener(\"change\", function() {\n\n        });\n    });\n\n    // window.addEventListener(\"load\", function() {\n    //     let selectedUser = localStorage.getItem(\"login\");\n    //     if (selectedUser) {\n    //         document.getElementById(\"userSelect\").value = selectedUser;\n    //     }\n    // });\n    function saveLog(){\n        localStorage.clear();\n        let selectedUser = this.value; // Получаем выбранного пользователя\n        const myJson = {\n            username: selectedUser\n        };\n        // Отправляем выбранного пользователя на сервер для авторизации\n        fetch(\"http://localhost:81/login.php\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(myJson) // Отправляем только имя пользователя\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response.text();\n                } else {\n                    throw new Error(\"Ошибка сети\");\n                }\n            })\n            .then(data => {\n                console.log(data);\n                log=myJson.username;\n            })\n            .catch(error => {\n                // Ошибка сервера\n                alert(\"Ошибка: \" + error.message);\n            });\n        localStorage.setItem('login', selectedUser);\n    }\n\n    return (\n        <main>\n            <div className='Settings'>\n                <h1 className='Text'>Choose user</h1>\n                <select id=\"userSelect\" className=\"UserSelector\">\n                    <option class=\"NameText\">user1</option>\n                    <option class=\"NameText\">user2</option>\n                </select>\n                <button onClick={saveLog}>SAVE LOG</button>\n            </div>\n        </main>\n    )\n}"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,OAAOA,SAAS,MAAM,kBAAkB;AACxC,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,IAAIC,GAAG;AAEP,eAAe,SAASC,QAAQA,CAAA,EAAI;EAChCC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;IACrDD,QAAQ,CAACE,cAAc,CAAC,YAAY,CAAC,CAACD,gBAAgB,CAAC,QAAQ,EAAE,YAAW,CAE5E,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA,SAASE,OAAOA,CAAA,EAAE;IACdC,YAAY,CAACC,KAAK,CAAC,CAAC;IACpB,IAAIC,YAAY,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG;MACXC,QAAQ,EAAEH;IACd,CAAC;IACD;IACAI,KAAK,CAAC,+BAA+B,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC,CACGQ,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,aAAa,CAAC;MAClC;IACJ,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVC,OAAO,CAACxB,GAAG,CAACuB,IAAI,CAAC;MACjBvB,GAAG,GAACU,MAAM,CAACC,QAAQ;IACvB,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAI;MACZ;MACAC,KAAK,CAAC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC;IACrC,CAAC,CAAC;IACNtB,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAErB,YAAY,CAAC;EAC/C;EAEA,oBACIT,OAAA;IAAA+B,QAAA,eACI/B,OAAA;MAAKgC,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrB/B,OAAA;QAAIgC,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCpC,OAAA;QAAQqC,EAAE,EAAC,YAAY;QAACL,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC5C/B,OAAA;UAAQsC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCpC,OAAA;UAAQsC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACTpC,OAAA;QAAQuC,OAAO,EAAEjC,OAAQ;QAAAyB,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAACI,EAAA,GAzDuBtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}